üè• API de Gesti√≥n de Citas M√©dicas
üìö Proyecto Acad√©mico
Una API REST dise√±ada para gestionar citas m√©dicas, enfoc√°ndose en autenticaci√≥n de pacientes y administraci√≥n eficiente de citas. Construida con las mejores pr√°cticas de desarrollo utilizando Node.js, Express, JWT, y PostgreSQL.

üöÄ Descripci√≥n del Proyecto
Este proyecto proporciona una soluci√≥n escalable y segura para la gesti√≥n de citas m√©dicas. Incluye rutas esenciales para pacientes, como inicio de sesi√≥n, asignaci√≥n, edici√≥n y eliminaci√≥n de citas. El enfoque principal est√° en implementar las funcionalidades pares asignadas en el enunciado, asegurando un desarrollo limpio y funcional.

üë®‚Äçüíª Autor
Nombre: Carlos Andr√©s Mesa Rold√°n
C√©dula: 1044508253
Instituci√≥n: Universidad de Antioquia
Contacto: carlos.mesar@udea.edu.co
üõ†Ô∏è Tecnolog√≠as Utilizadas
Backend: Node.js, Express.js
Autenticaci√≥n: JSON Web Token (JWT)
Base de Datos: PostgreSQL
Lenguaje: JavaScript
‚ú® Caracter√≠sticas Principales
üåü Autenticaci√≥n de Pacientes
POST /patient/login
Los pacientes pueden iniciar sesi√≥n utilizando su correo y contrase√±a.
Genera un token JWT con vigencia de 30 minutos para sesiones seguras.
üìÖ Gesti√≥n de Citas M√©dicas
GET /patient/:id/appointment

Consulta todas las citas de un paciente por su ID.
POST /patient/appointment

Permite asignar nuevas citas a pacientes, especificando fecha y hora.
PUT /patient/appointment/:appointmentId

Actualiza la informaci√≥n de una cita existente (fecha y hora).
DELETE /patient/appointment/:appointmentId

Cancela una cita espec√≠fica de un paciente.



Eliminar cita
curl -X DELETE http://localhost:3000/patient/appointment/1 \
-H "Authorization: Bearer {token}"
Informaci√≥n de Doctores
Obtener informaci√≥n de un doctor en especifico segun ID
curl http://localhost:3000/doctor/1 \
-H "Authorization: Bearer $TOKEN" | jq
Obtener citas de un doctor
curl http://localhost:3000/doctor/1/appointment \
-H "Authorization: Bearer $TOKEN" | jq
Ver citas de un doctor por fecha
curl "http://localhost:3000/doctor/1/appointment?date=20-11-2024" \
-H "Authorization: Bearer $TOKEN" | jq



Para autenticarse en el sistema, realiza una solicitud de inicio de sesi√≥n:
curl -X POST http://localhost:3000/patient/login
-H "Content-Type: application/json"
-d '{ "email": "miguel.santos@email.com", "password": "admin123" }' | jq

Guardar el Token para Uso en las Siguientes Peticiones
Guarda el token generado tras el login para usarlo en futuras solicitudes:
TOKEN=$(curl -s -X POST http://localhost:3000/patient/login
-H "Content-Type: application/json"
-d '{"email":"miguel.santos@email.com","password":"admin123"}'
| jq -r '.data.token')

üóìÔ∏è Gesti√≥n de Citas
1. Obtener Todas las Citas del Paciente
Consulta todas las citas asociadas al paciente autenticado:
curl http://localhost:3000/patient/appointment
-H "Authorization: Bearer $TOKEN" | jq

2. Filtrar Citas por Fecha
Obt√©n las citas de un paciente para una fecha espec√≠fica:
curl "http://localhost:3000/patient/appointment?date=2024-11-20"
-H "Authorization: Bearer $TOKEN" | jq

3. Crear Nueva Cita
Asigna una nueva cita a un paciente:
curl -X POST http://localhost:3000/patient/appointment
-H "Authorization: Bearer $TOKEN"
-H "Content-Type: application/json"
-d '{ "doctorId": 1, "date": "2024-11-20", "hour": "09:00" }' | jq

4. Modificar una Cita Existente
Edita la informaci√≥n de una cita espec√≠fica (reemplaza {id} con el ID de la cita):
curl -X PUT http://localhost:3000/patient/appointment/{id}
-H "Authorization: Bearer $TOKEN"
-H "Content-Type: application/json"
-d '{ "doctorId": 1, "date": "2024-11-21", "hour": "09:00" }' | jq

5. Eliminar una Cita
Elimina una cita espec√≠fica (reemplaza 1 con el ID de la cita):
curl -X DELETE http://localhost:3000/patient/appointment/1
-H "Authorization: Bearer $TOKEN"

ü©∫ Gesti√≥n de Doctores
1. Obtener Informaci√≥n de un Doctor
Consulta los detalles de un doctor espec√≠fico (reemplaza 1 con el ID del doctor):
curl http://localhost:3000/doctor/1
-H "Authorization: Bearer $TOKEN" | jq

2. Consultar Citas de un Doctor
Obt√©n todas las citas asociadas a un doctor espec√≠fico (reemplaza 1 con el ID del doctor):
curl http://localhost:3000/doctor/1/appointment
-H "Authorization: Bearer $TOKEN" | jq

3. Ver Citas de un Doctor por Fecha
Filtra las citas de un doctor para una fecha espec√≠fica:
curl "http://localhost:3000/doctor/1/appointment?date=2024-11-20"
-H "Authorization: Bearer $TOKEN" | jq

A tener en cuenta
Aseg√∫rate de que el servidor est√© en ejecuci√≥n en http://localhost:3000.
Usa jq para formatear las respuestas JSON de manera legible.
Reemplaza los valores {id} o 1 con los identificadores correspondientes seg√∫n el contexto.